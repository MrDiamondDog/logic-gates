var __awaiter=this&&this.__awaiter||function(t,n,u,a){return new(u=u||Promise)(function(i,e){function o(t){try{r(a.next(t))}catch(t){e(t)}}function s(t){try{r(a.throw(t))}catch(t){e(t)}}function r(t){var e;t.done?i(t.value):((e=t.value)instanceof u?e:new u(function(t){t(e)})).then(o,s)}r((a=a.apply(t,n||[])).next())})};import Node from"./node.js";class Utils{static powerColor(t){return t?"#34c13b":"#84423f"}static getTextWidth(e,i){var o=0;for(let t=0;t<i.length;t++)o+=e.measureText(i[t]).width;return o}static getTextHeight(t,e){t=t.measureText(e);return t.fontBoundingBoxAscent+t.fontBoundingBoxDescent}static circle(t,e,i,o,s){t.fillStyle=s,t.beginPath(),t.arc(e,i,o,0,2*Math.PI,!1),t.fill()}static circleContainsPoint(t,e,i,o,s){return Math.sqrt(Math.pow(t-i,2)+Math.pow(e-o,2))<s}static rectContainsPoint(t,e,i,o,s,r){return i<=t&&t<=i+s&&o<=e&&e<=o+r}static rectIntersectsRect(t,e,i,o,s,r,n,u){return t<s+n&&s<t+i&&e<r+u&&r<e+o}static bezierLine(t,e,i,o,s,r){t.strokeStyle=r,t.beginPath(),t.moveTo(e,i),t.bezierCurveTo(e-50,i,o+50,s,o,s),t.stroke()}static CreateNode(e,t){let i=100,o=100,s=!0;for(;s;){s=!1;for(let t=0;t<this.nodes.length;t++){var r=this.nodes[t];if(this.rectIntersectsRect(i,o,200,200,r.x,r.y,r.width,r.height)){s=!0,(i+=50)>e.canvas.width-200&&(i=100,o+=50);break}}}switch(t){case"Random":t=this.prebuiltNodes[Math.floor(Math.random()*this.prebuiltNodes.length)],this.CreateNode(e,t);break;case"or":this.nodes.push(new Node(e,{title:"OR",inputs:["A","B"],outputs:["C"],x:i,y:o,tooltip:"Outputs true if either input is true."},t=>[t[0].powered||t[1].powered]));break;case"and":this.nodes.push(new Node(e,{title:"AND",inputs:["A","B"],outputs:["C"],x:i,y:o,tooltip:"Outputs true if both inputs are true."},t=>[t[0].powered&&t[1].powered]));break;case"not":this.nodes.push(new Node(e,{title:"NOT",inputs:["A"],outputs:["B"],x:i,y:o,tooltip:"Outputs true if the input is false."},t=>[!t[0].powered]));break;case"input":12<this.inputs.length?alert("Input limit reached!"):this.nodes.push(new Node(e,{title:"Input",inputs:[],outputs:["A"],x:i,y:o,tooltip:"Outputs true if the input is true.",widgetOptions:[{type:"button",parentIOName:"A"}]},(t,e)=>[e[0].powered]));break;case"output":12<this.outputs.length?alert("Output limit reached!"):this.nodes.push(new Node(e,{title:"Output",inputs:["A"],outputs:[],x:i,y:o,tooltip:"Outputs true if the input is true."},t=>[]));break;case"xor":this.nodes.push(new Node(e,{title:"XOR",inputs:["A","B"],outputs:["C"],x:i,y:o,tooltip:"Outputs true if one input is true and the other is false."},t=>[t[0].powered!=t[1].powered]));break;case"nand":this.nodes.push(new Node(e,{title:"NAND",inputs:["A","B"],outputs:["C"],x:i,y:o,tooltip:"Outputs true if both inputs are false."},t=>[!(t[0].powered&&t[1].powered)]));break;case"nor":this.nodes.push(new Node(e,{title:"NOR",inputs:["A","B"],outputs:["C"],x:i,y:o,tooltip:"Outputs true if both inputs are false."},t=>[!(t[0].powered||t[1].powered)]));break;case"xnor":this.nodes.push(new Node(e,{title:"XNOR",inputs:["A","B"],outputs:["C"],x:i,y:o,tooltip:"Outputs true if both inputs are the same."},t=>[t[0].powered==t[1].powered]))}}static sleep(t){return __awaiter(this,void 0,void 0,function*(){return Promise.resolve(setTimeout(()=>{},t))})}}Utils.letters="ABCDEFGHIJKLMNOPQRSTUVWXYZ",Utils.backgroundColor="#212d38",Utils.accentColor="#2f3e4e",Utils.accentColor2="#3f4e5e",Utils.highlightColor="#2d5b8a",Utils.selectColor="rgba(4, 122, 239, 0.25)",Utils.textColor="#ffffff",Utils.footerTextColor="#909090",Utils.nodes=[],Utils.inputs=[],Utils.outputs=[],Utils.selectedNode=void 0,Utils.selectedNodes=[],Utils.selectingMultiple=!1,Utils.prebuiltNodes=["Random","input","output","or","nor","xor","and","xnor","nand","not"],Utils.mouse={x:0,y:0,dragging:!1,draggingNode:null,draggingIO:void 0,hoveringInput:void 0,hoveringOutput:void 0,dragOffset:{x:0,y:0},dragStart:{x:0,y:0},selecting:!1,clicking:!1};export default Utils;